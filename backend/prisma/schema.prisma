// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "./generated/prisma"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id          String            @id @default(auto()) @map("_id") @db.ObjectId
  username    String            @unique
  email       String            @unique
  password    String
  createdAt   DateTime          @default(now())

  memberships ChatMembership[]
  messages    Message[]
}

model Chat {
  id          String            @id @default(auto()) @map("_id") @db.ObjectId
  isGroup     Boolean           @default(false)
  name        String?
  createdAt   DateTime          @default(now())

  memberships ChatMembership[]
  messages    Message[]
}

model ChatMembership {
  id      String   @id @default(auto()) @map("_id") @db.ObjectId
  userId  String   @db.ObjectId
  chatId  String   @db.ObjectId

  user    User     @relation(fields: [userId], references: [id])
  chat    Chat     @relation(fields: [chatId], references: [id])
}

model Message {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  chatId    String   @db.ObjectId
  senderId  String   @db.ObjectId
  content   String
  createdAt DateTime @default(now())

  chat      Chat     @relation(fields: [chatId], references: [id])
  sender    User     @relation(fields: [senderId], references: [id])
}
